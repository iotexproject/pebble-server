// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: pebble.proto

package pebblepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BinPackage_PackageType int32

const (
	BinPackage_DATA   BinPackage_PackageType = 0
	BinPackage_CONFIG BinPackage_PackageType = 1
	BinPackage_STATE  BinPackage_PackageType = 2
)

// Enum value maps for BinPackage_PackageType.
var (
	BinPackage_PackageType_name = map[int32]string{
		0: "DATA",
		1: "CONFIG",
		2: "STATE",
	}
	BinPackage_PackageType_value = map[string]int32{
		"DATA":   0,
		"CONFIG": 1,
		"STATE":  2,
	}
)

func (x BinPackage_PackageType) Enum() *BinPackage_PackageType {
	p := new(BinPackage_PackageType)
	*p = x
	return p
}

func (x BinPackage_PackageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BinPackage_PackageType) Descriptor() protoreflect.EnumDescriptor {
	return file_pebble_proto_enumTypes[0].Descriptor()
}

func (BinPackage_PackageType) Type() protoreflect.EnumType {
	return &file_pebble_proto_enumTypes[0]
}

func (x BinPackage_PackageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *BinPackage_PackageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = BinPackage_PackageType(num)
	return nil
}

// Deprecated: Use BinPackage_PackageType.Descriptor instead.
func (BinPackage_PackageType) EnumDescriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{4, 0}
}

type SensorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snr           *uint32 `protobuf:"varint,1,opt,name=snr" json:"snr,omitempty"`
	Vbat          *uint32 `protobuf:"varint,2,opt,name=vbat" json:"vbat,omitempty"`
	Latitude      *int32  `protobuf:"zigzag32,3,opt,name=latitude" json:"latitude,omitempty"`
	Longitude     *int32  `protobuf:"zigzag32,4,opt,name=longitude" json:"longitude,omitempty"`
	GasResistance *uint32 `protobuf:"varint,5,opt,name=gasResistance" json:"gasResistance,omitempty"`
	Temperature   *int32  `protobuf:"zigzag32,6,opt,name=temperature" json:"temperature,omitempty"`
	Pressure      *uint32 `protobuf:"varint,7,opt,name=pressure" json:"pressure,omitempty"`
	Humidity      *uint32 `protobuf:"varint,8,opt,name=humidity" json:"humidity,omitempty"`
	Light         *uint32 `protobuf:"varint,9,opt,name=light" json:"light,omitempty"`
	Temperature2  *uint32 `protobuf:"varint,10,opt,name=temperature2" json:"temperature2,omitempty"`
	Gyroscope     []int32 `protobuf:"zigzag32,11,rep,name=gyroscope" json:"gyroscope,omitempty"`
	Accelerometer []int32 `protobuf:"zigzag32,12,rep,name=accelerometer" json:"accelerometer,omitempty"`
	Random        *string `protobuf:"bytes,13,opt,name=random" json:"random,omitempty"`
}

func (x *SensorData) Reset() {
	*x = SensorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pebble_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorData) ProtoMessage() {}

func (x *SensorData) ProtoReflect() protoreflect.Message {
	mi := &file_pebble_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorData.ProtoReflect.Descriptor instead.
func (*SensorData) Descriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{0}
}

func (x *SensorData) GetSnr() uint32 {
	if x != nil && x.Snr != nil {
		return *x.Snr
	}
	return 0
}

func (x *SensorData) GetVbat() uint32 {
	if x != nil && x.Vbat != nil {
		return *x.Vbat
	}
	return 0
}

func (x *SensorData) GetLatitude() int32 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *SensorData) GetLongitude() int32 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *SensorData) GetGasResistance() uint32 {
	if x != nil && x.GasResistance != nil {
		return *x.GasResistance
	}
	return 0
}

func (x *SensorData) GetTemperature() int32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *SensorData) GetPressure() uint32 {
	if x != nil && x.Pressure != nil {
		return *x.Pressure
	}
	return 0
}

func (x *SensorData) GetHumidity() uint32 {
	if x != nil && x.Humidity != nil {
		return *x.Humidity
	}
	return 0
}

func (x *SensorData) GetLight() uint32 {
	if x != nil && x.Light != nil {
		return *x.Light
	}
	return 0
}

func (x *SensorData) GetTemperature2() uint32 {
	if x != nil && x.Temperature2 != nil {
		return *x.Temperature2
	}
	return 0
}

func (x *SensorData) GetGyroscope() []int32 {
	if x != nil {
		return x.Gyroscope
	}
	return nil
}

func (x *SensorData) GetAccelerometer() []int32 {
	if x != nil {
		return x.Accelerometer
	}
	return nil
}

func (x *SensorData) GetRandom() string {
	if x != nil && x.Random != nil {
		return *x.Random
	}
	return ""
}

type SensorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BulkUpload             *uint32 `protobuf:"varint,1,opt,name=bulkUpload" json:"bulkUpload,omitempty"`
	DataChannel            *uint32 `protobuf:"varint,2,opt,name=dataChannel" json:"dataChannel,omitempty"`
	UploadPeriod           *uint32 `protobuf:"varint,3,opt,name=uploadPeriod" json:"uploadPeriod,omitempty"`
	BulkUploadSamplingCnt  *uint32 `protobuf:"varint,4,opt,name=bulkUploadSamplingCnt" json:"bulkUploadSamplingCnt,omitempty"`
	BulkUploadSamplingFreq *uint32 `protobuf:"varint,5,opt,name=bulkUploadSamplingFreq" json:"bulkUploadSamplingFreq,omitempty"`
	Beep                   *uint32 `protobuf:"varint,6,opt,name=beep" json:"beep,omitempty"`
	Firmware               *string `protobuf:"bytes,7,opt,name=firmware" json:"firmware,omitempty"`
	DeviceConfigurable     *bool   `protobuf:"varint,8,opt,name=deviceConfigurable" json:"deviceConfigurable,omitempty"`
}

func (x *SensorConfig) Reset() {
	*x = SensorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pebble_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorConfig) ProtoMessage() {}

func (x *SensorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pebble_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorConfig.ProtoReflect.Descriptor instead.
func (*SensorConfig) Descriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{1}
}

func (x *SensorConfig) GetBulkUpload() uint32 {
	if x != nil && x.BulkUpload != nil {
		return *x.BulkUpload
	}
	return 0
}

func (x *SensorConfig) GetDataChannel() uint32 {
	if x != nil && x.DataChannel != nil {
		return *x.DataChannel
	}
	return 0
}

func (x *SensorConfig) GetUploadPeriod() uint32 {
	if x != nil && x.UploadPeriod != nil {
		return *x.UploadPeriod
	}
	return 0
}

func (x *SensorConfig) GetBulkUploadSamplingCnt() uint32 {
	if x != nil && x.BulkUploadSamplingCnt != nil {
		return *x.BulkUploadSamplingCnt
	}
	return 0
}

func (x *SensorConfig) GetBulkUploadSamplingFreq() uint32 {
	if x != nil && x.BulkUploadSamplingFreq != nil {
		return *x.BulkUploadSamplingFreq
	}
	return 0
}

func (x *SensorConfig) GetBeep() uint32 {
	if x != nil && x.Beep != nil {
		return *x.Beep
	}
	return 0
}

func (x *SensorConfig) GetFirmware() string {
	if x != nil && x.Firmware != nil {
		return *x.Firmware
	}
	return ""
}

func (x *SensorConfig) GetDeviceConfigurable() bool {
	if x != nil && x.DeviceConfigurable != nil {
		return *x.DeviceConfigurable
	}
	return false
}

type SensorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
}

func (x *SensorState) Reset() {
	*x = SensorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pebble_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorState) ProtoMessage() {}

func (x *SensorState) ProtoReflect() protoreflect.Message {
	mi := &file_pebble_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorState.ProtoReflect.Descriptor instead.
func (*SensorState) Descriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{2}
}

func (x *SensorState) GetState() uint32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

type SensorConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
}

func (x *SensorConfirm) Reset() {
	*x = SensorConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pebble_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorConfirm) ProtoMessage() {}

func (x *SensorConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_pebble_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorConfirm.ProtoReflect.Descriptor instead.
func (*SensorConfirm) Descriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{3}
}

func (x *SensorConfirm) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

type BinPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *BinPackage_PackageType `protobuf:"varint,1,req,name=type,enum=pebblepb.BinPackage_PackageType" json:"type,omitempty"`
	Data      []byte                  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	Timestamp *uint32                 `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	Signature []byte                  `protobuf:"bytes,4,req,name=signature" json:"signature,omitempty"`
}

func (x *BinPackage) Reset() {
	*x = BinPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pebble_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinPackage) ProtoMessage() {}

func (x *BinPackage) ProtoReflect() protoreflect.Message {
	mi := &file_pebble_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinPackage.ProtoReflect.Descriptor instead.
func (*BinPackage) Descriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{4}
}

func (x *BinPackage) GetType() BinPackage_PackageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return BinPackage_DATA
}

func (x *BinPackage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BinPackage) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *BinPackage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ConfirmPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner     []byte  `protobuf:"bytes,1,req,name=owner" json:"owner,omitempty"`
	Timestamp *uint32 `protobuf:"varint,2,req,name=timestamp" json:"timestamp,omitempty"`
	Signature []byte  `protobuf:"bytes,3,req,name=signature" json:"signature,omitempty"`
	Channel   *uint32 `protobuf:"varint,4,req,name=channel" json:"channel,omitempty"`
}

func (x *ConfirmPackage) Reset() {
	*x = ConfirmPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pebble_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPackage) ProtoMessage() {}

func (x *ConfirmPackage) ProtoReflect() protoreflect.Message {
	mi := &file_pebble_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPackage.ProtoReflect.Descriptor instead.
func (*ConfirmPackage) Descriptor() ([]byte, []int) {
	return file_pebble_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmPackage) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ConfirmPackage) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *ConfirmPackage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ConfirmPackage) GetChannel() uint32 {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return 0
}

var File_pebble_proto protoreflect.FileDescriptor

var file_pebble_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x70, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x22, 0x82, 0x03, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6e, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x62, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x62, 0x61, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x67, 0x61, 0x73, 0x52, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x32, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x79, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x11, 0x52, 0x09, 0x67, 0x79, 0x72, 0x6f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x11, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x22, 0xc2, 0x02,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x62, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x62, 0x75, 0x6c, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x75,
	0x6c, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x46, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x62, 0x75, 0x6c, 0x6b,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x72,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x65, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x62, 0x65, 0x65, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0xc2,
	0x01, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x65,
	0x62, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x42, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x2e, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54, 0x41, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x02, 0x22, 0x7c, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x70, 0x65, 0x62, 0x62, 0x6c, 0x65, 0x70, 0x62,
}

var (
	file_pebble_proto_rawDescOnce sync.Once
	file_pebble_proto_rawDescData = file_pebble_proto_rawDesc
)

func file_pebble_proto_rawDescGZIP() []byte {
	file_pebble_proto_rawDescOnce.Do(func() {
		file_pebble_proto_rawDescData = protoimpl.X.CompressGZIP(file_pebble_proto_rawDescData)
	})
	return file_pebble_proto_rawDescData
}

var file_pebble_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pebble_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pebble_proto_goTypes = []interface{}{
	(BinPackage_PackageType)(0), // 0: pebblepb.BinPackage.PackageType
	(*SensorData)(nil),          // 1: pebblepb.SensorData
	(*SensorConfig)(nil),        // 2: pebblepb.SensorConfig
	(*SensorState)(nil),         // 3: pebblepb.SensorState
	(*SensorConfirm)(nil),       // 4: pebblepb.SensorConfirm
	(*BinPackage)(nil),          // 5: pebblepb.BinPackage
	(*ConfirmPackage)(nil),      // 6: pebblepb.ConfirmPackage
}
var file_pebble_proto_depIdxs = []int32{
	0, // 0: pebblepb.BinPackage.type:type_name -> pebblepb.BinPackage.PackageType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pebble_proto_init() }
func file_pebble_proto_init() {
	if File_pebble_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pebble_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pebble_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pebble_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pebble_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pebble_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pebble_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pebble_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pebble_proto_goTypes,
		DependencyIndexes: file_pebble_proto_depIdxs,
		EnumInfos:         file_pebble_proto_enumTypes,
		MessageInfos:      file_pebble_proto_msgTypes,
	}.Build()
	File_pebble_proto = out.File
	file_pebble_proto_rawDesc = nil
	file_pebble_proto_goTypes = nil
	file_pebble_proto_depIdxs = nil
}
